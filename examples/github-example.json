{"version":"1.0.0","name":"GitHub-example","common":{"createdAt":"2020-06-04T10:22:24.548Z","files":[{"content":"let url = new URL(document.URL);\nlet data = null;\nlet selector = null;\n\nrws.log(url.pathname);\nrws.log(url.search);\n\n\nlet flow = {\n  '/login': () => {\n    let loginField = document.querySelector('#login_field');\n    let pwdField = document.querySelector('#password');\n    loginField.value = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\";\n    pwdField.value = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\";\n    let form = document.querySelector('.auth-form form');\n    let submitButtonPath = 'input[type=submit]';\n    let submitButton = form.querySelector(submitButtonPath);\n    if (submitButton) selector = submitButtonPath;\n  },\n  '/sessions/two-factor': () => {\n    rws.manualActionRequired('2Factor activated! Solve it, wait for the page to be reloaded and click continue.');\n  },\n  '/': () => {\n    let yourRepoSelector = \"header > div.Header-item > details > details-menu > a[href$='repositories']\";\n    let elem = document.querySelector(yourRepoSelector);\n    if (elem) selector = yourRepoSelector;\n  },\n}\n\nfunction scrapRepos() {\n  // scrap\n  let container = document.querySelector('ul[data-filterable-for=\"your-repos-filter\"]');\n  let repos = container.querySelectorAll('li');\n  data = [...repos].map(repo => ({\n    name: repo.querySelector('a[itemprop=\"name codeRepository\"]').textContent.trim()\n  }));\n  // next page\n  selector = '.paginate-container a.btn:last-child';\n  let button = document.querySelector(selector);\n  if (!button || !button.textContent || !button.textContent.toLowerCase().includes('next'))\n    selector = null;\n}\n\n\nif (url.search && url.search.toLowerCase().includes('tab=repositories'))\n  scrapRepos();\n\nfn = flow[url.pathname] || (() => {});\nfn()\n\n\n// Always call rws.resolve() to end you script\n/** @type {ScriptAction} */\nlet scriptAction = {\n  data: data,\n  nextPage: {\n    buttonPath: selector,\n    waitElemPath: null,\n  }\n};\nrws.resolve(scriptAction);\n","langague":"javascript","name":"Scrapper.js"},{"content":"[\n  \"https://github.com/login\"\n]\n","langague":"json","name":"URLs.json"},{"content":"","langague":"json","name":"data.json"},{"content":"\nlet url = 'https://api.themoviedb.org/3/movie/76341?api_key=test';\nlet options = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(rws.data)\n};\n\n// // Using fetch to send the data through POST to a random API\n// let response = await fetch(url, options);\n// let content = await response.json();\n// rws.log(content);\n// rws.resolve();\n\n// Same with .then flow\nfetch(url, options)\n.then(response => response.json())\n.then(rws.log)\n.then(rws.resolve);\n","langague":"javascript","name":"dataworker.js"}]}}