{"version":"1.0.0","name":"CDiscount-example","common":{"createdAt":"2020-06-03T16:24:14.786Z","files":[{"content":"// Get Data\nlet container = document.querySelector('#lpBloc');\nlet itemsSelector = 'li[data-sku]';\nlet items = container.querySelectorAll(itemsSelector);\nlet data = [...items]\n.filter(i => i.querySelector('.prdtBlocInline'))\n.map(item => {\n  let imgURL = item.querySelector('.prdtBILImg img').src;\n  let price = item.querySelector('.prdtBILPrice > .hideFromPro.price').textContent;\n  let name = item.querySelector('.prdtBILDetails > a').textContent;\n  return { imgURL, price, name };\n});\n\nrws.log(`${document.URL} : ${data.length} items`);\n\n//If there is a pagination\nlet selector = '#pager .pgLightPrevNext a';\nlet element = document.querySelector(selector);\nif (!element.textContent.toLowerCase().includes('suivante'))\n  selector = null;\n\n//Delete all items in `itemsSelector` so WebScrapper will wait for it to exist before re-executing this script.\nitems.forEach(i => i.remove());\n\n/** @type {ScriptAction} */\nlet scriptAction = {\n  data: data,\n  nextPage: {\n    buttonPath: selector,\n    waitElemPath: itemsSelector,\n  }\n};\nrws.resolve(scriptAction)\n","langague":"javascript","name":"Scrapper.js"},{"content":"[\n  \"https://www.cdiscount.com/electromenager/lavage-sechage/achat-lave-linge/top/l-110010401.html#_his_\",\n  \"https://www.cdiscount.com/electromenager/lavage-sechage/achat-lave-linge/lavante-sechante/l-110010408.html#_his_\"\n]\n","langague":"json","name":"URLs.json"},{"content":"","langague":"json","name":"data.json"},{"content":"\nlet url = 'https://api.themoviedb.org/3/movie/76341?api_key=test';\nlet options = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(rws.data)\n};\n\n// // Using fetch to send the data through POST to a random API\n// let response = await fetch(url, options);\n// let content = await response.json();\n// rws.log(content);\n// rws.resolve();\n\n// Same with .then flow\nfetch(url, options)\n.then(response => response.json())\n.then(rws.log)\n.then(rws.resolve);\n","langague":"javascript","name":"dataworker.js"}]}}